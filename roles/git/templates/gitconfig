# vim: set filetype=conf :

[alias]
  br = branch
  co = checkout
  dc = diff --cached
  ci = commit
  st = status
  # Clone a repository including all submodules
  cl = clone --recursive
  # Show verbose output about tags, branches or remotes
  tags = tag -l
  remotes = remote -v
  graph = log --graph --decorate --pretty=oneline --abbrev-commit
  amend = commit --amend
  c = commit
  d = diff --patience
  l = log
  dc = diff --patience --cached
  co = checkout
  f = fetch
  s = status
  cp = cherry-pick
  st = status --short
  a = add

[apply]
  # Detect whitespace errors when applying a patch
  whitespace = fix

[core]
  # Use custom `.gitignore` and `.gitattributes`
  excludesfile = ~/.gitignore_global
  attributesfile = ~/.gitattributes
  # Treat spaces before tabs, lines that are indented with 8 or more spaces, and
  # all kinds of trailing whitespace as an error.
  # [default] trailing-space: looks for spaces at the end of a line
  # [default] space-before-tab: looks for spaces before tabs at the beginning of
  # a line
  whitespace = space-before-tab,trailing-space
  # Make `git rebase` safer on OS X
  # More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
  trustctime = false
  editor = vim

[color]
  # Use colors in Git commands that are capable of colored output when
  # outputting to the terminal. (This is the default setting in Git â‰¥ 1.8.4.)
  ui = auto
[merge]
  # Include summaries of merged commits in newly created merge commit messages
  log = true

[push]
  default = simple
[user]
  email = {{ dotfiles_git_email }}
  name = Marguerite des Trois Maisons
[fetch]
  prune = true
